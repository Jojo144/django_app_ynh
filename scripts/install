#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers


app=$YNH_APP_INSTANCE_NAME

repo=$YNH_APP_ARG_REPO
project=$YNH_APP_ARG_PROJECT
domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
passwd=$YNH_APP_ARG_PASSWD
email=$YNH_APP_ARG_EMAIL

final_path=/opt/$app

# We do this first so that we have nothing to remove if we fail
# FIXME don't delete the user in case of failure here!
sudo useradd $app -d $final_path \
    || (ynh_die "User already exists: ${app}.\n Aborting.")

ynh_abort_if_errors


path=$(ynh_normalize_url_path $path)

ynh_app_setting_set "$app" repo "$repo"
ynh_app_setting_set "$app" project "$project"
ynh_app_setting_set "$app" domain "$domain"
ynh_app_setting_set "$app" path "$path"
ynh_app_setting_set "$app" admin "$admin"
ynh_app_setting_set "$app" email "$email"


secret=$(ynh_string_random 24) # A bug don't allow to do random string bigger than 24
ynh_app_setting_set "$app" secret "$secret"

# Check domain/path availability
ynh_webpath_available $domain $path

# FXME Useful? Make the script fail with
# This app is already installed. The url cannot be changed just by this function. Look into `app changeurl` if it's available.
# ynh_webpath_register $app $domain $path


# Dependencies
ynh_install_app_dependencies $pkg_dependencies

sudo mkdir -p $final_path
app_path=$final_path/app
sudo git clone $repo $app_path

python3 -m venv $final_path/venv
venv_python=$final_path/venv/bin/python3
venv_pip=$final_path/venv/bin/pip

$venv_pip install pip --upgrade
$venv_pip install gunicorn
$venv_pip install -r $app_path/requirements.txt

# Configuration Django
settings_ynh=$app_path/$project/settings_ynh.py
cp $app_path/$project/settings_ynh.py.example $settings_ynh
ynh_replace_string "YNH_APP_ARG_ADMIN" $admin $settings_ynh
ynh_replace_string "YNH_APP_ARG_DOMAIN" $domain $settings_ynh
ynh_replace_string "YNH_APP_ARG_PATH" $path $settings_ynh
ynh_replace_string "YNH_APP_ARG_EMAIL" $email $settings_ynh
ynh_replace_string "YNH_APP_SECRET_KEY" $secret $settings_ynh
ynh_replace_string "YNH_APP_STATIC_ROOT" $final_path/static $settings_ynh

# Set permissions
sudo chown -R $app:www-data $final_path


# Log folder
sudo mkdir -p /var/log/$app
sudo chown -R $app /var/log/$app
sudo chgrp -R www-data /var/log/$app


sudo -u $app $venv_python $app_path/manage.py migrate --noinput
sudo -u $app $venv_python $app_path/manage.py collectstatic --noinput

# Create the admin
echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('${admin}', '${email}', '${passwd}')" | $venv_python $app_path/manage.py shell


# Modify Nginx configuration file and copy it to Nginx conf directory
ynh_replace_string "PATHTOCHANGE" $path ../conf/nginx.conf
ynh_replace_string "YNH_APP_INSTANCE_NAME" $app ../conf/nginx.conf
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf


# Service gunicorn
ynh_replace_string "YNH_APP_INSTANCE_NAME" $app ../conf/gunicorn_config.py
ynh_replace_string "YNH_APP_INSTANCE_NAME" $app ../conf/gunicorn.service
ynh_replace_string "YNH_APP_PROJECT" $project ../conf/gunicorn.service
sudo cp ../conf/gunicorn.service /etc/systemd/system/$app.service
sudo systemctl daemon-reload
sudo cp ../conf/gunicorn_config.py $final_path


## Reload Nginx and regenerate SSOwat conf
sudo service nginx reload
sudo systemctl start $app
sudo systemctl enable $app
sudo yunohost service add $app -l /var/log/gunicorn/$app.log


# C'est public ! (pas de SSO ynh)
ynh_app_setting_set "$app" skipped_uris "/"
sudo yunohost app ssowatconf
